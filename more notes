HOMEWORK review


keyword >> variable name >> assignmet operator >>value

keyword + var name = declaration
 variable do not have data values
    only the value has a value.....

assignment operator + value = assignment (assigning a value to a declaration)
    instantiation is when a value is assigned at the time of declaration


FUNCTIONAL PROGRAMMING
  -the same input will give you the output

  arguments are the needs defined for the FN - the parameters are the actual or
      fill that need

   keyword >> name >> arguments >> body === codeblock

 ES6

 ex)

 function multiply (x=1, y=1){
    //this says "if you give me an undefined value, the fn will set it to the assigned
    // value";

  return x +y;
 }


NEW STUFF  2/28/17

OBJECTS and ARRAYS

objects are value types
    by def, they contain many values
    objects contain 0 or more values
    objects can contain other objects

    you can access values within an object using "dot"syntax
      console.log(object.valueName)

  a dot signifies the thing o the left is an object

  [] syntax == square bracket syntax

  If you want to use a var when looking at object properties
          YOU MUST use square brackets!!!!!
  You can re-assign values to existing objects
  you can add new properties to objects as well

  you can add functionality to objects IE functions

  'this' will act as the current object name but only within the object itself




ARRAYS
 created with [];
 accessed with the position
  arrays are accessed by their index-not position
[]-brackets access values   (. dot syntax access names)

push  -  adding something to the end of a collection
  ie objects

arrayName.push will add en entry to the end of array.

.includes() will return a boolean about an argument

ITERATION
  doing something over and over again


forEach() is a method-

.split()  will split something with given parameters
      when you split a string it will return an array


      Useful Methods
      There are a bunch of built-in methods that are available on arrays.
      The full list is here, but understanding adding (push), removing (pop, shift, splice),
      finding individual elements ([] operator), and finding the length (length)
      will be a strong start.










HOMEWORK review*************************************************

deck.js

Converting the face value to numeric values
  you can use index to to compare values. In my code, I could
  change the var card to an array of card values, then iterate through
  them to make my deck. As I iterate, change the value of the card inside
  the deck .....but wouldnt' that be redundant?


I could have also have switch ed the nested for loops to get 4 sets of 13

DONT FORGET- AN ARRAY CAN STILL BE AN OBJECT!!!!
IE CONSOLE.LOG IS A OBJECT AND LOG IS  A function

RATHER THAN PUSH, I could have used .concat to add the card values to the array

deck = deck.concat(array)- this would have been nest in a loop

game.js

I probably should have iterated by 2 rather than create 2 new arrays.

++ always will add one more and save it to that values

I can create another array containing the set of card, then compare the
  the value of  of the (shuffleAr) at the index of my second array.









***********************************************************
